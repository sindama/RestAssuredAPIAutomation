package stepDefinitions;

import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.specification.ResponseSpecification;
import pojo.AddPlace;
import pojo.Location;
import resources.APIEnumResources;
import resources.TestDataBuild;
import resources.Utils;

public class StepDefinition extends Utils {
    ResponseSpecification respec;
    RequestSpecification response;
    Response res;
    TestDataBuild data=new TestDataBuild();
       @Given("Add place payload {string} {string} {string}")
    public void add_place_payload(String name, String lang, String add) throws IOException {
   	   response= given().spec(requestSpecification()).body(data.addplacePayload(name,lang,add));
	}

	@When("user calls {string} with post http request")
	public void user_calls_with_post_http_request(String resource) {
	    // Write code here that turns the phrase above into concrete actions
		APIEnumResources url=APIEnumResources.valueOf(resource);
		url.getResource();
		respec = new ResponseSpecBuilder().expectStatusCode(200).expectContentType(ContentType.JSON).build();
		   res= response.when().post(url.getResource()).
		            then().spec(respec).extract().response();
	}

	@Then("the API call is success with status code {int}")
	public void the_api_call_is_success_with_status_code(Integer int1) {
	    // Write code here that turns the phrase above into concrete actions
	    assertEquals(res.getStatusCode(),200);
	}

	@Then("{string} in response body is {string}")
	public void in_response_body_is(String keyValue, String Expectedvalue) {
	    // Write code here that turns the phrase above into concrete actions
	   String response=res.asString();
	   JsonPath js=new JsonPath(response);
	   assertEquals(js.get(keyValue).toString(),Expectedvalue);
	}

}
